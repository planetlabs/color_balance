
import numpy as np
import unittest

from color_balance import colorimage, histogram_match


class Tests(unittest.TestCase):


    def test_cdf_normalization_band(self):

        for testno in (1,2,):

            input_bands, reference_bands, golden_lut = \
                _get_test_data(testno)

            colors = ('Red', 'Green', 'Blue')
            for color in colors:

                in_band = input_bands[color]
                ref_band = reference_bands[color]

                in_cdf = colorimage.get_cdf(in_band)
                ref_cdf = colorimage.get_cdf(ref_band)
                color_lut = histogram_match.cdf_match_lut(in_cdf, ref_cdf)

                assert np.array_equal(color_lut, golden_lut[color])


def _get_test_data(testno):
    if testno == 1:
        input_histograms = {
            "Blue": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,0,1,0,2,3,0,3,0,2,0,1,4,5,3,2,2,4,8,9,12,13,24,53,146,357,801,1965,4699,10414,21452,41068,75826,124396,194985,285180,393482,541739,652686,718506,680118,579654,435087,304666,202339,131295,83954,56851,40317,29446,23031,19145,16543,14503,13544,11654,11365,10681,8669,10066,9402,8702,7797,7423,6351,5764,4992,4147,3806,2962,2468,2140,1740,1611,1270,1192,1059,954,920,808,761,637,621,526,495,448,418,406,357,333,323,293,281,275,205,214,231,229,190,184,210,171,172,157,156,139,128,129,125,117,113,106,96,106,104,103,102,89,92,108,86,91,71,68,63,70,72,67,61,50,52,64,60,50,45,60,41,62,37,35,44,30,42,43,39,37,39,42,31,20,38,25,42,23,13,26,21,19,22,19,11,20,16,11,12,11,15,12,11,6,11,13,14,12,9,9,7,5,11,13,14,7,6,7,17,9,13,6,8,6,9,8,7,11,6,9,8,9,8,11,6,6,6,11,106",
            "Green": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,1,1,1,1,1,3,4,4,4,6,36,88,244,694,1894,4653,11227,24491,49519,85594,146853,239165,410263,601140,754018,777182,712846,542705,399414,265306,192519,130992,90752,64499,45116,32870,26812,20639,18658,16969,15048,13315,11792,10719,10022,9216,8691,8340,7888,7459,7068,6455,5243,6137,5010,4435,3974,3382,2887,2617,2093,1688,1459,1316,1118,952,902,775,657,621,583,510,504,457,411,324,347,327,322,265,259,266,247,198,222,192,204,187,160,145,143,126,146,142,127,125,125,118,107,105,107,104,93,98,96,88,76,62,65,65,69,65,70,75,57,64,52,62,49,49,59,59,46,47,39,46,43,29,38,31,32,27,28,29,20,21,22,19,22,11,13,29,18,22,19,14,11,16,12,14,17,8,9,12,13,11,6,6,9,7,11,13,8,13,12,4,8,10,8,9,9,11,6,8,9,7,7,8,1,12,4,3,4,7,6,4,1,4,3,6,6,3,3,6,2,3,2,4,5,4,2,2,1,2,0,5,3,1,1,3,1,4,4,2,2,2,3,2,1,1,3,2,4,1,1,1,0,32",
            "Red": "0,0,0,1,1,1,1,0,1,0,1,1,2,5,5,6,18,55,170,417,1049,2456,5820,12761,27206,57065,110189,201011,347729,538006,710045,772958,727872,581244,426050,297267,211333,154717,116291,85788,64413,48858,37973,29976,25139,21288,18394,16228,14148,12922,12156,10639,10256,9527,8808,8279,7840,7283,6769,6558,6370,6043,5668,5363,5239,4585,4159,3870,3410,2922,2556,2319,1897,1659,1401,1171,1056,929,826,760,683,646,605,487,513,470,397,401,344,321,310,290,237,263,237,201,190,192,179,172,154,166,131,156,151,145,129,122,110,102,100,119,101,99,74,106,99,78,76,69,99,78,76,75,69,67,52,55,51,57,53,38,53,49,49,39,35,30,35,37,30,21,26,31,28,29,21,26,26,19,22,18,21,18,13,18,18,19,18,15,9,13,16,12,12,13,14,7,6,8,15,9,6,15,11,4,8,13,14,7,14,9,9,5,9,4,7,7,5,2,8,3,2,6,4,9,4,5,1,4,6,0,4,6,3,3,1,5,5,7,2,3,2,6,1,0,2,3,1,2,3,0,2,3,0,1,2,1,2,1,3,3,1,0,2,0,1,2,1,3,2,0,0,0,2,1,0,1,1,0,3,1,1,1,2,12"}
        reference_histograms = {
            "Blue": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,146,0,0,0,1264,0,0,0,4240,0,0,0,12948,0,0,0,19347,0,0,0,18834,0,18666,0,0,28719,0,0,45023,0,0,70933,0,0,107030,0,0,107215,0,0,107979,0,134448,0,0,222266,0,0,327828,0,0,415991,0,0,444683,0,0,443333,0,0,401239,0,368293,0,0,352636,0,0,306770,0,0,254828,0,0,214200,0,0,174684,0,0,147548,119448,0,91954,0,70075,0,52557,0,44724,0,36405,0,27704,0,19762,0,13360,0,10585,0,7190,0,4867,0,2737,0,1566,0,1109,0,936,0,732,545,459,0,385,429,369,0,330,332,0,326,303,194,0,206,217,0,222,218,125,143,132,104,114,75,86,65,59,53,122,0,1322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "Green": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,94,0,0,0,310,0,1283,0,0,2687,0,0,4327,0,0,8356,0,0,22475,0,0,42457,0,0,49943,0,66985,0,0,98447,0,0,135287,0,0,188402,0,0,231611,0,0,279615,0,0,312737,0,355018,0,0,396270,0,0,386225,0,0,352215,0,0,315165,0,0,290484,0,0,266897,246637,0,216101,0,194704,0,164860,0,135430,0,111750,87162,0,68004,0,57038,0,44967,0,31718,0,24000,17905,0,12208,0,9396,0,6693,0,4619,0,3613,2932,2116,0,1710,1334,1104,0,777,676,0,564,687,600,0,532,539,0,468,452,469,347,240,326,246,329,221,175,203,191,159,0,2248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "Red": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,241,0,0,1156,0,0,0,2313,0,0,5864,0,0,0,23217,0,41447,0,0,52305,0,0,44804,0,0,45125,0,0,52440,0,0,63655,0,0,84950,0,106100,0,0,134286,0,0,147444,0,0,154203,0,0,161233,0,0,180590,0,0,201827,0,214273,0,0,225141,0,0,229115,0,0,221171,0,0,222869,0,0,215694,0,0,214079,203203,0,203881,0,194320,178632,0,167614,0,157583,0,143754,127683,0,117095,0,103097,0,93132,82055,0,70759,0,62269,0,53940,47165,0,40420,0,35791,0,28881,21124,17364,0,13400,10327,8125,0,6435,5253,0,3597,2909,2191,0,1534,1458,0,1279,1205,1103,806,773,687,580,549,404,384,401,270,360,0,566,241,200,228,194,210,340,130,144,168,122,147,162,74,67,76,67,118,90,127,29,42,27,56,59,52,33,26,0,31,27,15,74,35,15,15,6,6,20,0,8,0,46,44,36,39,18,36,0,27,9,12,53,6,29,8,20,0,0,0,0,0,0"}
        color_lut = {
            "Blue": "44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,48,48,48,48,48,48,48,48,48,52,52,52,56,60,60,64,70,76,82,85,93,96,99,105,108,113,116,122,125,128,129,131,133,133,135,135,137,137,137,139,139,139,141,141,141,141,143,143,145,145,145,147,147,147,149,149,149,151,151,151,151,153,153,153,155,155,155,157,157,159,159,161,161,162,162,163,163,165,166,166,166,167,169,169,170,170,172,172,172,173,173,174,174,176,177,177,177,179,179,180,180,181,181,182,183,183,184,184,185,185,186,187,188,189,189,190,191,191,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193",
            "Green": "60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,64,64,64,68,68,70,73,76,79,82,88,90,93,99,105,108,113,119,125,129,133,135,137,139,140,142,142,144,144,144,146,146,146,148,148,148,148,150,150,150,151,151,153,153,153,155,155,157,159,159,161,162,162,163,163,165,166,166,167,169,169,170,172,173,174,174,176,176,177,179,179,180,180,181,181,182,182,183,184,184,185,185,186,186,186,187,187,188,189,189,190,190,191,191,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193",
            "Red": "54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,57,57,61,64,64,68,70,73,79,88,96,105,113,122,129,134,138,141,143,147,148,150,152,154,154,155,155,157,157,159,159,159,161,161,161,161,162,162,163,163,163,165,165,165,166,166,167,169,169,170,170,172,173,173,174,176,177,177,179,180,180,181,181,182,183,183,184,185,185,186,187,187,188,189,189,190,191,191,193,193,193,194,194,195,195,196,197,197,198,198,199,199,199,200,200,201,202,202,203,203,204,204,205,205,206,207,208,208,209,210,210,211,211,211,212,212,213,214,214,215,216,217,217,217,218,218,219,220,222,222,223,224,225,225,225,225,226,226,227,228,229,231,231,233,235,235,235,235,236,236,236,236,237,237,237,237,238,238,238,238,238,239,239,240,240,240,240,240,242,242,242,242,242,242,242,243,243,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,246,246,246,246,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249"}
    elif testno == 2:
        input_histograms = {
            "Blue": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,6,9,14,27,55,76,110,216,343,456,734,1062,1545,2202,2997,4377,5901,8418,11160,14672,20066,26206,33345,42190,52569,63115,75170,86675,99727,111147,124280,135004,145301,156280,163410,169029,174357,176548,178712,177921,177905,173979,172090,166895,160496,157435,149443,143755,136513,128997,120422,111305,105866,95948,89081,80564,73974,68174,61342,56434,50742,46780,43548,39333,36845,33758,31515,29624,27992,26364,24500,23351,22552,21099,20359,19386,18444,17907,17216,16353,15602,15475,14730,14184,13536,13503,13067,12745,12234,12152,11612,11444,11063,10643,10588,10257,10093,9713,9378,9247,9114,8761,8416,8046,7994,7579,7417,7423,6960,6970,6560,6368,6221,6239,5990,5859,5714,5525,5337,5163,4931,4833,4693,4560,4397,4181,4051,3858,3719,3733,3457,3454,3298,3202,3038,3032,2831,2745,2690,2584,2571,2393,2426,2343,2195,2161,2066,1971,1922,1807,1826,1831,1740,1556,1500,1483,1392,1327,1283,1242,1147,1172,1115,1034,972,926,878,843,792,830,793,698,674,703,613,606,595,633,578,564,562,515,561,551,535,547,577,536,531,542,525,503,571,573,639,688,685,722,750,762,804,868,883,917,860,10639",
            "Green": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,3,6,16,32,32,66,79,151,255,380,535,781,1209,1894,2726,4138,5743,8215,11226,14937,19970,25660,32643,40051,47638,56951,64894,74257,80065,97326,103309,114010,125073,134530,143797,151339,159043,164237,166747,170741,169709,170439,169650,168071,165116,159671,158854,152395,147915,141172,135094,127062,119770,112256,104026,98048,88814,82744,75141,70348,63777,59091,54545,49784,45794,42461,39739,36893,34270,32137,30249,27620,26651,24616,23607,22179,20913,20185,19578,17756,17070,17098,16480,15397,15118,14359,14159,13390,13203,12601,12111,11836,11286,10977,10774,10207,9748,9480,9181,8756,8605,8260,7994,7700,7424,7110,6697,6493,6246,6124,5748,5383,5345,4805,4872,4546,4209,4283,3938,3785,3564,3434,3352,3239,2959,2836,2719,2536,2477,2394,2187,2161,2043,1973,1795,1765,1629,1621,1505,1377,1329,1237,1196,1122,1078,1011,1121,929,953,917,877,792,860,858,839,746,738,681,674,639,624,654,640,607,615,627,624,558,530,531,521,491,418,496,476,437,425,374,412,444,390,351,343,360,343,345,335,359,300,319,309,334,296,282,298,287,263,265,246,236,257,226,229,247,247,235,205,216,187,236,210,226,209,196,206,195,187,195,143,175,153,170,131,169,141,167,123,125,162,145,152,123,137,1278",
            "Red": "1,2,1,1,4,8,10,19,24,49,73,131,174,313,461,727,1118,1624,2557,3757,5451,7661,10828,14559,19356,25150,31283,37604,45004,51789,58368,65035,70904,76665,82640,88480,94046,99211,104310,108217,114176,116518,120448,122732,124604,125561,125646,126392,125681,125410,124918,124770,121475,124080,120956,120463,118369,115877,114543,112148,108752,105387,102289,99157,94366,89479,85385,80803,76980,72516,68498,64094,60539,57086,53431,50399,46904,44374,41373,39908,37243,35063,33079,31382,30083,28282,26624,25774,24385,23734,22366,21704,20701,20158,19197,18475,17699,17044,16457,15863,15271,14966,14406,13856,13336,12315,12138,11671,11280,10531,10178,9613,9208,8838,8349,7965,7463,7094,6673,6458,6012,5650,5266,5136,4857,4582,4306,4051,3939,3523,3458,3119,3057,2860,2684,2528,2381,2232,2111,2002,1904,1728,1726,1672,1524,1406,1411,1294,1225,1205,1169,1112,1077,1064,976,981,933,790,902,879,808,779,800,742,754,743,731,704,626,653,626,622,585,577,532,547,486,469,483,527,464,451,425,466,412,395,398,404,333,359,348,316,330,319,337,293,344,265,260,270,268,236,237,232,237,207,220,220,207,183,193,169,171,176,157,157,153,125,137,123,138,128,122,103,114,101,108,90,93,83,69,84,84,64,69,78,56,64,66,68,42,51,54,53,29,46,49,37,27,34,27,32,19,22,19,108"}
        reference_histograms = {
            "Blue": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,0,2890,0,0,0,839,0,0,0,749,0,0,0,11802,0,0,0,26103,0,0,0,58597,0,0,0,83042,0,0,0,98254,0,0,0,126590,0,0,0,167831,0,0,0,242365,0,311897,0,0,385471,0,0,436525,0,0,457120,0,0,447359,0,0,396351,0,0,330348,0,250996,0,0,192923,0,0,143384,0,0,102348,0,0,72985,0,0,51892,0,0,36804,0,26489,0,0,18527,0,0,13831,0,0,9658,0,0,7828,0,0,6587,0,0,5943,4524,0,4180,0,3725,0,3041,0,2883,0,2079,0,2019,0,1625,0,1368,0,1519,0,1310,0,1089,0,928,0,722,0,753,0,633,0,683,578,553,0,344,354,270,0,220,312,0,149,265,267,0,221,160,0,134,116,92,118,112,117,77,75,62,70,23,49,6,0,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "Green": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,308,0,0,0,2334,0,0,0,5877,0,0,0,10409,0,0,0,29023,0,0,0,44902,0,49981,0,0,57394,0,0,70640,0,0,82864,0,0,99216,0,0,126101,0,0,161680,0,222869,0,0,273439,0,0,319025,0,0,340294,0,0,351006,0,0,350496,0,0,327523,0,301699,0,0,259420,0,0,223015,0,0,183495,0,0,149402,0,0,119412,0,0,92782,71947,0,52840,0,39746,0,27634,0,21475,0,16732,13228,0,10503,0,7921,0,6554,0,4887,0,3927,3229,0,2616,0,2417,0,2189,0,1872,0,1946,1505,1373,0,1376,1238,815,0,1050,919,0,767,649,553,0,639,434,0,480,363,385,437,304,238,224,305,275,169,153,183,119,0,1433,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "Red": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,879,0,0,0,8419,0,0,20519,0,0,0,38363,0,0,55265,0,0,0,62898,0,64490,0,0,66435,0,0,69955,0,0,81962,0,0,91201,0,0,100663,0,0,117598,0,131124,0,0,142311,0,0,150120,0,0,154538,0,0,164230,0,0,171265,0,0,183360,0,186952,0,0,187224,0,0,183306,0,0,182839,0,0,177299,0,0,166609,0,0,163458,154682,0,146858,0,135243,120851,0,110515,0,98161,0,92391,79147,0,72762,0,63305,0,55479,49495,0,42539,0,34731,0,29411,25038,0,20204,0,16427,0,13418,10832,9021,0,7602,6927,5670,0,4775,4188,0,3355,2876,2463,0,1976,1788,0,1333,1166,1099,970,1022,964,946,726,677,585,721,490,462,0,993,353,363,253,411,298,419,233,171,210,212,211,346,136,107,171,116,114,73,168,35,138,53,34,51,89,12,21,3,10,16,24,39,24,51,14,6,10,16,6,10,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"}
        color_lut = {
            "Blue": "24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,28,28,28,28,28,32,40,40,40,40,44,44,48,48,48,52,52,52,56,60,60,64,64,68,68,70,70,70,73,73,73,76,76,76,79,79,79,82,82,82,82,85,85,85,85,88,88,88,88,88,90,90,90,90,90,90,93,93,93,93,93,93,93,93,93,96,96,96,96,96,96,96,96,96,96,99,99,99,99,99,99,99,99,99,99,102,102,102,102,102,102,102,102,102,105,105,105,105,105,105,105,105,105,108,108,108,108,108,108,108,108,110,110,110,110,110,110,110,113,113,113,113,113,113,116,116,116,116,116,116,119,119,119,119,119,122,122,122,122,125,125,125,125,125,128,128,128,128,129,129,129,129,129,131,131,131,131,131,133,133,133,133,133,135,135,135,135,135,135,137,137,137,137,137,137,137,139,139,139,139,139,141,141,141,141,143,143,143,143,145,145,147,147,147,149,151,151,193",
            "Green": "48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,52,52,52,52,56,56,56,60,60,64,64,64,68,68,70,70,73,76,76,79,82,85,85,88,88,90,90,93,93,96,96,99,99,99,102,102,105,105,105,108,108,108,110,110,110,113,113,113,113,116,116,116,116,119,119,119,119,122,122,122,122,122,122,125,125,125,125,125,125,128,128,128,128,128,128,128,129,129,129,129,129,129,129,131,131,131,131,131,131,133,133,133,133,133,133,135,135,135,135,135,137,137,137,137,137,139,139,139,139,140,140,140,140,140,142,142,142,142,144,144,144,144,144,146,146,146,146,148,148,148,148,150,150,150,150,151,151,151,153,153,153,153,155,155,155,155,157,157,157,159,159,159,159,161,161,161,161,162,162,162,163,163,163,165,165,165,165,166,166,166,166,167,167,167,169,169,169,169,170,170,170,172,172,172,173,173,173,174,174,174,176,176,176,177,177,177,179,179,180,180,181,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,190,190,191,193,193,193,193",
            "Red": "47,47,47,47,47,47,47,47,50,50,50,50,50,50,54,54,54,54,54,54,57,57,57,61,61,64,64,68,68,70,70,73,76,79,82,82,85,88,90,90,93,96,96,99,99,102,105,105,108,108,110,110,113,113,116,116,119,119,122,122,125,125,128,128,129,129,131,131,133,133,133,134,134,136,136,136,138,138,138,140,140,140,141,141,141,143,143,143,143,145,145,145,147,147,147,147,148,148,148,148,150,150,150,150,152,152,152,154,154,154,154,155,155,155,157,157,157,157,159,159,159,161,161,161,162,162,162,163,163,163,165,165,165,165,166,166,166,167,167,167,167,169,169,169,170,170,170,170,172,172,172,172,173,173,173,174,174,174,174,176,176,176,177,177,177,179,179,179,180,180,181,181,182,182,183,183,183,184,184,185,185,185,186,186,187,187,188,188,189,189,189,190,190,191,191,193,193,193,193,194,194,195,195,196,197,197,198,198,199,199,199,200,200,201,202,202,203,203,204,204,205,205,205,206,206,207,208,208,209,209,210,210,211,212,212,212,213,214,214,214,215,216,217,218,218,218,220,222,224,225,225,226,227,227,235"}
    else:
        raise Exception("testno should be 1 or 2")

    def apply_to_entries(fcn, in_dict):
        out_dict = {}
        for key in in_dict.keys():
            out_dict[key] = fcn(in_dict[key])
        return out_dict

    def str_to_array(input_string):
        return np.array([int(s) for s in input_string.split(',')])

    def histogram_to_band(hist):
        band = np.zeros(hist.sum(), dtype=np.uint8)
        index = 0
        for val, count in enumerate(hist):
            if count:
                band[index:index+count] = val
                index = index+count
        return band

    input_histograms_arr, reference_histograms_arr, color_lut_arr = \
        [apply_to_entries(str_to_array, array_str) \
        for array_str in (input_histograms, reference_histograms, color_lut)]

    input_bands, reference_bands = [apply_to_entries(histogram_to_band, arry) \
        for arry in (input_histograms_arr, reference_histograms_arr)]
    return (input_bands, reference_bands, color_lut_arr)


if __name__ == "__main__":
    unittest.main()
